$date
	Tue Aug 25 16:49:49 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module rcas_test $end
$var wire 4 ! S [3:0] $end
$var wire 1 " C $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Op $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Op $end
$var wire 1 ( w0 $end
$var wire 1 ) w1 $end
$var wire 1 * w2 $end
$var wire 1 + w3 $end
$var wire 1 , c3 $end
$var wire 1 - c2 $end
$var wire 1 . c1 $end
$var wire 4 / S [3:0] $end
$var wire 1 " C $end
$scope module F1 $end
$var wire 1 0 A $end
$var wire 1 ( B $end
$var wire 1 % Cin $end
$var wire 1 . Cout $end
$var wire 1 1 S $end
$var wire 1 2 w1 $end
$var wire 1 3 w2 $end
$var wire 1 4 w3 $end
$upscope $end
$scope module F2 $end
$var wire 1 5 A $end
$var wire 1 ) B $end
$var wire 1 . Cin $end
$var wire 1 - Cout $end
$var wire 1 6 S $end
$var wire 1 7 w1 $end
$var wire 1 8 w2 $end
$var wire 1 9 w3 $end
$upscope $end
$scope module F3 $end
$var wire 1 : A $end
$var wire 1 * B $end
$var wire 1 - Cin $end
$var wire 1 , Cout $end
$var wire 1 ; S $end
$var wire 1 < w1 $end
$var wire 1 = w2 $end
$var wire 1 > w3 $end
$upscope $end
$scope module F4 $end
$var wire 1 ? A $end
$var wire 1 + B $end
$var wire 1 , Cin $end
$var wire 1 " Cout $end
$var wire 1 @ S $end
$var wire 1 A w1 $end
$var wire 1 B w2 $end
$var wire 1 C w3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
1;
0:
09
18
07
06
15
04
03
12
11
10
b101 /
0.
1-
0,
0+
0*
1)
0(
b10 '
b11 &
0%
b10 $
b11 #
0"
b101 !
$end
#10000
16
01
1.
1"
1,
02
13
1=
1B
1;
0>
b1110 !
b1110 /
1@
1(
1*
1+
0<
0A
1:
1?
b1111 $
b1111 '
b1111 #
b1111 &
#20000
0;
1>
1@
1,
14
1.
06
19
1-
1<
0=
12
03
17
08
0*
b1000 !
b1000 /
01
00
05
1%
b100 $
b100 '
b1100 #
b1100 &
#30000
1-
1,
11
04
06
19
0;
1>
b1001 !
b1001 /
1@
0C
0"
0)
1*
0+
02
13
17
08
1<
0A
0B
10
15
0:
0?
b1010 $
b1010 '
b11 #
b11 &
#40000
1"
0-
0@
1C
0.
06
09
0;
0>
1A
03
07
0<
1=
0(
1+
b0 !
b0 /
01
00
05
1:
0%
b1100 $
b1100 '
b100 #
b100 &
#50000
